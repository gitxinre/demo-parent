<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">


    <!--
         mvc 4、mvc:annotation-driven 注解驱动
         当我们在浏览器中直接访问应用程序的静态资源
         jsp页面的时候，不会经过 DispatcherServlet ,而是以直接访问一个普通的jsp页面形式，
         直接跳转到jsp页面，而不会经过我们内置的servlet进行处理，这个时候有些功能就是无效的。
         解决方案1：就是走一遍controller进行转发到这个jsp页面
         解决方案2：直接给页面资源配置一个映射（spring-mvc.xml中进行配置：
            <mvc:view-controller path="自定义访问路径" view-name="静态资源逻辑试图名称"/>）
            使用方案2时，其他的controller控制器方法全部失效，
            解决方法是增加配置：<mvc:annotation-driven/>
    -->
    <mvc:annotation-driven/>
    <!--
         mvc 5、mvc:default-servlet-handler 处理静态资源
         springmvc 如何处理静态资源（例如：jQuery文件是静态资源，但spirngmvc会认为是个映射）
         为什么认为js资源文件是个映射呢？因为springmvc核心控制器 DispatcherServlet 会认为所有的
         url都是某一个视图或controller中方法的映射而配置 <mvc:default-servlet-handler/> 会告诉
         springmvc使用默认的servlet-handler而不使用 DispatcherServlet。这时 DispatcherServlet 失效
         后其他的controller控制器方法全部失效，解决DispatcherServlet失效方法是
          增加配置：<mvc:annotation-driven/>
        解决方案：配置<mvc:default-servlet-handler/>
    -->
    <mvc:default-servlet-handler/>
    <!-- mvc 2、component-scan 扫描 controller -->
    <context:component-scan base-package="com.ly.demo.controller"/>
    <!--<context:component-scan base-package="com.ly.demo.common."/>-->



    <!-- mvc 3、InternalResourceViewResolver 试图解析器（逻辑转物理） ,由于试图解析器没有配置id，故springmvc在获取试图解析器的时候是按照类型进行获取的 -->
    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/templetes/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 自定义试图解析器（额外的功能，参考MyView类中说明） -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="100"/>
    </bean>

    <!-- 给物理试图定义一个映射（相当与写一个controller转发到物理试图一样） -->
    <!--<mvc:view-controller path="/abc" view-name="global"/>-->
    <!-- 自定义试图 对应 映射器 -->
    <!--<mvc:view-controller path="/myViewPath" view-name="myView"/>-->

    <!--<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
        <property name="contentType" value="application/json;charset=UTF-8"/>
    </bean>-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->

    <!-- dubbo消费服务 - start -->
    <!-- zookeeper -->
    <dubbo:application name="demo-web"/>
    <dubbo:registry protocol="zookeeper" address="192.168.65.10:2181"/>
    <dubbo:reference id="userService" interface="com.ly.demo.service.UserService"/>
    <!-- multicast -->
    <!--<dubbo:application name="demo-web-multicast"/>
    <dubbo:registry address="multicast://224.5.6.7:1234" />
    <dubbo:reference id="userService" interface="com.ly.demo.service.UserService"/>-->
    <!-- dubbo消费服务 - end -->

</beans>